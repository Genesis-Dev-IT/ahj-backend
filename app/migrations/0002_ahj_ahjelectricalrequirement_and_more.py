# Generated by Django 5.2.5 on 2025-08-25 17:03

import django.db.models.deletion
import genesis.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AHJ',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(db_index=True, max_length=50)),
                ('state_code', models.CharField(db_index=True, max_length=10)),
                ('state', models.CharField(max_length=100)),
                ('building_code', models.CharField(blank=True, max_length=100, null=True)),
                ('electrical_code', models.CharField(blank=True, max_length=100, null=True)),
                ('state_specific_code', models.BooleanField(blank=True, null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ahj_created', to='app.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ahj_updated', to='app.user')),
            ],
            options={
                'db_table': 'ahj',
            },
        ),
        migrations.CreateModel(
            name='AHJElectricalRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ee_stamp_requirement', models.CharField(default='none', max_length=50)),
                ('ee_stamp_for_main_breaker_derate', models.BooleanField(default=False)),
                ('pv_meter_required', models.BooleanField(default=False)),
                ('ac_disconnect_type', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('ahj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ahj')),
            ],
            options={
                'db_table': 'ahj_electrical_requirement',
            },
        ),
        migrations.CreateModel(
            name='AHJGroundMountRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('soil_class', models.CharField(help_text='Soil classification', max_length=20)),
                ('freeze_depth', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum freeze depth in feet', max_digits=6, null=True)),
                ('thaw_depth', models.DecimalField(blank=True, decimal_places=2, help_text='Depth to which soil thaws in feet', max_digits=6, null=True)),
                ('setback_front', models.DecimalField(blank=True, decimal_places=2, help_text='Front yard setback in feet', max_digits=6, null=True)),
                ('setback_back', models.DecimalField(blank=True, decimal_places=2, help_text='Back yard setback in feet', max_digits=6, null=True)),
                ('setback_side', models.DecimalField(blank=True, decimal_places=2, help_text='Side yard setback in feet', max_digits=6, null=True)),
                ('gm_max_height', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum height of ground-mounted solar in feet', max_digits=6, null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('ahj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ahj')),
            ],
            options={
                'db_table': 'ahj_ground_mount_requirement',
            },
        ),
        migrations.CreateModel(
            name='AHJRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pv_meter_required', models.BooleanField(default=False)),
                ('ac_disconnect_required', models.BooleanField(default=False)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('ahj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ahj')),
            ],
            options={
                'db_table': 'ahj_requirement',
            },
        ),
        migrations.CreateModel(
            name='AHJSpecificRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('max_panel_system_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('loading_calculation_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('wind_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('exposure_category', models.CharField(blank=True, help_text='ASCE 7 exposure category', max_length=2, null=True)),
                ('snow_load', models.DecimalField(blank=True, decimal_places=2, help_text='Ground snow load in psf', max_digits=6, null=True)),
                ('ground_mount_allowed', models.BooleanField(default=False, help_text='Whether AHJ allows ground-mount systems')),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('ahj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ahj')),
            ],
            options={
                'db_table': 'ahj_specific_requirement',
            },
        ),
        migrations.CreateModel(
            name='AHJStructuralSetbackRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('wet_stamp_requirement', models.CharField(default='none', help_text='Type of wet stamp required for plans', max_length=50)),
                ('fire_setback_distance', models.DecimalField(blank=True, decimal_places=2, help_text='Fire setback in feet (if specified)', max_digits=6, null=True)),
                ('fire_setback_code_year', models.IntegerField(blank=True, help_text='Year of fire code used for determining setback', null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('ahj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ahj')),
            ],
            options={
                'db_table': 'ahj_structural_setback_requirement',
            },
        ),
        migrations.CreateModel(
            name='ZipcodeAHJ',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('zipcode', models.CharField(db_index=True, max_length=20)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('ahj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ahj')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zipcode_ahj_created', to='app.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zipcode_ahj_updated', to='app.user')),
            ],
            options={
                'db_table': 'zipcode_ahj',
                'indexes': [models.Index(fields=['zipcode', 'ahj'], name='zipcode_ahj_zipcode_fc6718_idx')],
                'unique_together': {('zipcode', 'ahj')},
            },
        ),
    ]
