# Generated by Django 5.2.5 on 2025-09-07 07:28

import django.core.validators
import django.db.models.deletion
import genesis.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0005_subscriptionplan_apiusage_apitoken'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'project_level',
            },
        ),
        migrations.CreateModel(
            name='SolarUtility',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('website_link', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('submission_process', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline')], max_length=10)),
                ('offset', models.DecimalField(blank=True, decimal_places=2, help_text='Offset percentage (0-100, decimals allowed).', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('review_days_part1', models.IntegerField(blank=True, null=True)),
                ('review_days_part2', models.IntegerField(blank=True, null=True)),
                ('application_submission_link_part1', models.TextField(blank=True, null=True)),
                ('application_submission_link_part2', models.TextField(blank=True, null=True)),
                ('requires_combined_pdf', models.BooleanField(default=False)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('project_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.projectlevel')),
            ],
            options={
                'db_table': 'solar_utility',
            },
        ),
        migrations.CreateModel(
            name='SolarUtilityPart1Requirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('part1_application_form', models.BooleanField(default=False)),
                ('engineering_drawing', models.BooleanField(default=False)),
                ('inverter_datasheet', models.BooleanField(default=False)),
                ('pv_watts', models.BooleanField(default=False)),
                ('change_of_contract_letter', models.BooleanField(default=True)),
                ('docusign_certificate', models.BooleanField(default=True)),
                ('load_calculation_direct', models.BooleanField(default=False)),
                ('load_calculation_pe_stamped', models.BooleanField(default=False)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('solar_utility', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='part1_requirement', to='app.solarutility')),
            ],
            options={
                'db_table': 'solar_utility_part1_requirement',
            },
        ),
        migrations.CreateModel(
            name='SolarUtilityPart2Requirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('certificate_of_approval', models.BooleanField(default=False)),
                ('part2_application_form', models.BooleanField(default=False)),
                ('as_built', models.BooleanField(default=False)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('solar_utility', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='part2_requirement', to='app.solarutility')),
            ],
            options={
                'db_table': 'solar_utility_part2_requirement',
            },
        ),
        migrations.CreateModel(
            name='Utility',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('state_code', models.CharField(blank=True, max_length=10, null=True)),
                ('level', models.CharField(choices=[('city', 'City'), ('township', 'Township'), ('state', 'State'), ('country', 'Country')], max_length=20)),
                ('type', models.CharField(choices=[('gas', 'Gas'), ('solar', 'Solar'), ('sewer', 'Sewer'), ('electric', 'Electric'), ('water', 'Water')], max_length=20)),
                ('website_link', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utility_created', to='app.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utility_updated', to='app.user')),
            ],
            options={
                'db_table': 'utility',
            },
        ),
        migrations.AddField(
            model_name='solarutility',
            name='utility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solar_utilities', to='app.utility'),
        ),
        migrations.CreateModel(
            name='ZipcodeUtilityMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipcode', models.CharField(db_index=True, max_length=20)),
                ('utility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.utility')),
            ],
            options={
                'db_table': 'zipcode_utility_mapping',
            },
        ),
        migrations.AddConstraint(
            model_name='utility',
            constraint=models.CheckConstraint(condition=models.Q(('level__in', ['city', 'township', 'state', 'country'])), name='utility_level_valid'),
        ),
        migrations.AddConstraint(
            model_name='utility',
            constraint=models.CheckConstraint(condition=models.Q(('type__in', ['gas', 'solar', 'sewer', 'electric', 'water'])), name='utility_type_valid'),
        ),
        migrations.AddConstraint(
            model_name='solarutility',
            constraint=models.CheckConstraint(condition=models.Q(('submission_process__in', ['online', 'offline'])), name='solar_submission_valid'),
        ),
        migrations.AddIndex(
            model_name='zipcodeutilitymapping',
            index=models.Index(fields=['zipcode', 'utility'], name='zipcode_uti_zipcode_dcc9d2_idx'),
        ),
        migrations.AddConstraint(
            model_name='zipcodeutilitymapping',
            constraint=models.UniqueConstraint(fields=('zipcode', 'utility'), name='unique_zipcode_utility'),
        ),
    ]
