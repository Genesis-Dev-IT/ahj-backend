# Generated by Django 5.2.5 on 2025-08-28 13:08

import django.db.models.deletion
import genesis.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0003_ahj_ahjelectricalrequirement_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utility',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('state_code', models.CharField(db_index=True, max_length=10)),
                # ('state', models.CharField(max_length=100)),
                ('production_meter', models.BooleanField(blank=True, null=True)),
                ('disconnect', models.BooleanField(blank=True, null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utility_created', to='app.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utility_updated', to='app.user')),
            ],
            options={
                'db_table': 'utility',
            },
        ),
        migrations.CreateModel(
            name='UtilityData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('lc_required', models.BooleanField(default=False)),
                ('hoi_required', models.BooleanField(default=False)),
                ('online_submission', models.BooleanField(default=False)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('utility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.utility')),
            ],
            options={
                'db_table': 'utility_data',
            },
        ),
        migrations.CreateModel(
            name='UtilityICApplicationRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('application_type', models.CharField(blank=True, help_text='Utility-defined application type (e.g., Type A, Type B, Type C)', max_length=50, null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('utility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.utility')),
            ],
            options={
                'db_table': 'utility_ic_application_requirement',
            },
        ),
        migrations.CreateModel(
            name='UtilityProductionMeterRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('system_size_kw', models.DecimalField(blank=True, decimal_places=2, help_text='System size in kW', max_digits=5, null=True)),
                ('location_notes', models.TextField(blank=True, help_text='Notes about placement/location of meter', null=True)),
                ('distance_from_service_ft', models.DecimalField(blank=True, decimal_places=2, help_text='Distance from main service meter', max_digits=5, null=True)),
                ('prohibited_locations', models.TextField(blank=True, help_text='Any prohibited locations (e.g., patio/carport)', null=True)),
                ('wiring_orientation', models.CharField(blank=True, help_text='Line/top = inverter, Load/bottom = utility', max_length=100, null=True)),
                ('sequence_notes', models.TextField(blank=True, help_text='Sequence of devices (Inverter > AC Disconnect > PV Meter > Interconnection)', null=True)),
                ('meter_model', models.CharField(blank=True, help_text='Model of PV meter (e.g., Milbank U4518-XL-W)', max_length=50, null=True)),
                ('meter_amp_rating', models.PositiveIntegerField(blank=True, help_text='Amp rating (e.g., 200)', null=True)),
                ('meter_size', models.CharField(blank=True, help_text='Physical size (e.g., 15.5"x11"x4.375")', max_length=50, null=True)),
                ('meter_features', models.TextField(blank=True, help_text='Ringless, bypass lever, 5th jaw, SMART etc.', null=True)),
                ('wire_size', models.CharField(blank=True, help_text='Wire sizes (#8 for 100A, #6 for 200A)', max_length=50, null=True)),
                ('is_meter_optional', models.BooleanField(default=False, help_text='Is meter optional?')),
                ('exempt_under_kw', models.DecimalField(blank=True, decimal_places=2, help_text='Exemption threshold in kW', max_digits=5, null=True)),
                ('smart_meter_required', models.BooleanField(default=False, help_text='Whether SMART meter labeling is required')),
                ('access_requirements', models.TextField(blank=True, help_text='Accessibility requirements (keyless, 24/7, etc.)', null=True)),
                ('notes', models.TextField(blank=True, help_text='Any additional utility notes', null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('utility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.utility')),
            ],
            options={
                'db_table': 'utility_production_meter_requirement',
            },
        ),
        migrations.CreateModel(
            name='UtilityRequirement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('system_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('farm_system_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('minimum_system_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_metering_required', models.BooleanField(default=False)),
                ('bidirectional_meter_required', models.BooleanField(default=False)),
                ('production_meter_required', models.BooleanField(default=False)),
                ('production_meter_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('disconnect_placement', models.CharField(blank=True, help_text="Comma-separated values (e.g. 'exterior_wall, meter_location')", max_length=255, null=True)),
                ('created_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('updated_at', models.BigIntegerField(default=genesis.utils.current_timestamp)),
                ('utility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.utility')),
            ],
            options={
                'db_table': 'utility_requirement',
            },
        ),
        migrations.CreateModel(
            name='ZipcodeUtilityMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipcode', models.CharField(db_index=True, max_length=20)),
                ('utility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.utility')),
            ],
            options={
                'db_table': 'zipcode_utility_mapping',
                'indexes': [models.Index(fields=['zipcode', 'utility'], name='zipcode_uti_zipcode_dcc9d2_idx')],
                'constraints': [models.UniqueConstraint(fields=('zipcode', 'utility'), name='unique_zipcode_utility')],
            },
        ),
    ]
